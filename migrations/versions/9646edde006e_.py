"""empty message

Revision ID: 9646edde006e
Revises: 01ac187e177b
Create Date: 2018-06-07 17:41:33.497317

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9646edde006e'
down_revision = '01ac187e177b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('machine',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('machine_id', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('machine_id')
    )
    op.create_table('historic',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('machine_id', sa.Integer(), nullable=True),
    sa.Column('dataos', sqlalchemy_utils.types.json.JSONType(), nullable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machine.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('result')
    op.drop_table('historico')
    op.drop_table('historico_Maquina')
    op.drop_table('maquina')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('maquina',
    sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('maquina_id_seq'::regclass)"), nullable=False),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('maquina', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], [u'user.id'], name=u'maquina_owner_id_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'maquina_pkey'),
    sa.UniqueConstraint('maquina', name=u'maquina_maquina_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('historico_Maquina',
    sa.Column('maquina_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('hist_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['hist_id'], [u'historico.id'], name=u'historico_Maquina_hist_id_fkey'),
    sa.ForeignKeyConstraint(['maquina_id'], [u'maquina.id'], name=u'historico_Maquina_maquina_id_fkey')
    )
    op.create_table('historico',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=80), autoincrement=False, nullable=True),
    sa.Column('resultado', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], [u'user.id'], name=u'historico_owner_id_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'historico_pkey'),
    sa.UniqueConstraint('name', name=u'historico_name_key')
    )
    op.create_table('result',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('dataos', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], [u'maquina.id'], name=u'result_owner_id_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'result_pkey')
    )
    op.drop_table('historic')
    op.drop_table('machine')
    # ### end Alembic commands ###
